#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3601087727253132969) {
   out_3601087727253132969[0] = 0;
   out_3601087727253132969[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3601087727253132969[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3601087727253132969[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3601087727253132969[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3601087727253132969[5] = -sin(in_vec[1]);
   out_3601087727253132969[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3601087727253132969[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3601087727253132969[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3601087727253132969[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3601087727253132969[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3601087727253132969[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3601087727253132969[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3601087727253132969[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3601087727253132969[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3601087727253132969[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3601087727253132969[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3601087727253132969[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1153752211634308443) {
   out_1153752211634308443[0] = delta_x[0] + nom_x[0];
   out_1153752211634308443[1] = delta_x[1] + nom_x[1];
   out_1153752211634308443[2] = delta_x[2] + nom_x[2];
   out_1153752211634308443[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1153752211634308443[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1153752211634308443[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1153752211634308443[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1153752211634308443[7] = delta_x[6] + nom_x[7];
   out_1153752211634308443[8] = delta_x[7] + nom_x[8];
   out_1153752211634308443[9] = delta_x[8] + nom_x[9];
   out_1153752211634308443[10] = delta_x[9] + nom_x[10];
   out_1153752211634308443[11] = delta_x[10] + nom_x[11];
   out_1153752211634308443[12] = delta_x[11] + nom_x[12];
   out_1153752211634308443[13] = delta_x[12] + nom_x[13];
   out_1153752211634308443[14] = delta_x[13] + nom_x[14];
   out_1153752211634308443[15] = delta_x[14] + nom_x[15];
   out_1153752211634308443[16] = delta_x[15] + nom_x[16];
   out_1153752211634308443[17] = delta_x[16] + nom_x[17];
   out_1153752211634308443[18] = delta_x[17] + nom_x[18];
   out_1153752211634308443[19] = delta_x[18] + nom_x[19];
   out_1153752211634308443[20] = delta_x[19] + nom_x[20];
   out_1153752211634308443[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6655342838562251109) {
   out_6655342838562251109[0] = -nom_x[0] + true_x[0];
   out_6655342838562251109[1] = -nom_x[1] + true_x[1];
   out_6655342838562251109[2] = -nom_x[2] + true_x[2];
   out_6655342838562251109[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6655342838562251109[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6655342838562251109[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6655342838562251109[6] = -nom_x[7] + true_x[7];
   out_6655342838562251109[7] = -nom_x[8] + true_x[8];
   out_6655342838562251109[8] = -nom_x[9] + true_x[9];
   out_6655342838562251109[9] = -nom_x[10] + true_x[10];
   out_6655342838562251109[10] = -nom_x[11] + true_x[11];
   out_6655342838562251109[11] = -nom_x[12] + true_x[12];
   out_6655342838562251109[12] = -nom_x[13] + true_x[13];
   out_6655342838562251109[13] = -nom_x[14] + true_x[14];
   out_6655342838562251109[14] = -nom_x[15] + true_x[15];
   out_6655342838562251109[15] = -nom_x[16] + true_x[16];
   out_6655342838562251109[16] = -nom_x[17] + true_x[17];
   out_6655342838562251109[17] = -nom_x[18] + true_x[18];
   out_6655342838562251109[18] = -nom_x[19] + true_x[19];
   out_6655342838562251109[19] = -nom_x[20] + true_x[20];
   out_6655342838562251109[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6387601908760479860) {
   out_6387601908760479860[0] = 1.0;
   out_6387601908760479860[1] = 0;
   out_6387601908760479860[2] = 0;
   out_6387601908760479860[3] = 0;
   out_6387601908760479860[4] = 0;
   out_6387601908760479860[5] = 0;
   out_6387601908760479860[6] = 0;
   out_6387601908760479860[7] = 0;
   out_6387601908760479860[8] = 0;
   out_6387601908760479860[9] = 0;
   out_6387601908760479860[10] = 0;
   out_6387601908760479860[11] = 0;
   out_6387601908760479860[12] = 0;
   out_6387601908760479860[13] = 0;
   out_6387601908760479860[14] = 0;
   out_6387601908760479860[15] = 0;
   out_6387601908760479860[16] = 0;
   out_6387601908760479860[17] = 0;
   out_6387601908760479860[18] = 0;
   out_6387601908760479860[19] = 0;
   out_6387601908760479860[20] = 0;
   out_6387601908760479860[21] = 0;
   out_6387601908760479860[22] = 1.0;
   out_6387601908760479860[23] = 0;
   out_6387601908760479860[24] = 0;
   out_6387601908760479860[25] = 0;
   out_6387601908760479860[26] = 0;
   out_6387601908760479860[27] = 0;
   out_6387601908760479860[28] = 0;
   out_6387601908760479860[29] = 0;
   out_6387601908760479860[30] = 0;
   out_6387601908760479860[31] = 0;
   out_6387601908760479860[32] = 0;
   out_6387601908760479860[33] = 0;
   out_6387601908760479860[34] = 0;
   out_6387601908760479860[35] = 0;
   out_6387601908760479860[36] = 0;
   out_6387601908760479860[37] = 0;
   out_6387601908760479860[38] = 0;
   out_6387601908760479860[39] = 0;
   out_6387601908760479860[40] = 0;
   out_6387601908760479860[41] = 0;
   out_6387601908760479860[42] = 0;
   out_6387601908760479860[43] = 0;
   out_6387601908760479860[44] = 1.0;
   out_6387601908760479860[45] = 0;
   out_6387601908760479860[46] = 0;
   out_6387601908760479860[47] = 0;
   out_6387601908760479860[48] = 0;
   out_6387601908760479860[49] = 0;
   out_6387601908760479860[50] = 0;
   out_6387601908760479860[51] = 0;
   out_6387601908760479860[52] = 0;
   out_6387601908760479860[53] = 0;
   out_6387601908760479860[54] = 0;
   out_6387601908760479860[55] = 0;
   out_6387601908760479860[56] = 0;
   out_6387601908760479860[57] = 0;
   out_6387601908760479860[58] = 0;
   out_6387601908760479860[59] = 0;
   out_6387601908760479860[60] = 0;
   out_6387601908760479860[61] = 0;
   out_6387601908760479860[62] = 0;
   out_6387601908760479860[63] = 0;
   out_6387601908760479860[64] = 0;
   out_6387601908760479860[65] = 0;
   out_6387601908760479860[66] = -0.5*state[4];
   out_6387601908760479860[67] = -0.5*state[5];
   out_6387601908760479860[68] = -0.5*state[6];
   out_6387601908760479860[69] = 0;
   out_6387601908760479860[70] = 0;
   out_6387601908760479860[71] = 0;
   out_6387601908760479860[72] = 0;
   out_6387601908760479860[73] = 0;
   out_6387601908760479860[74] = 0;
   out_6387601908760479860[75] = 0;
   out_6387601908760479860[76] = 0;
   out_6387601908760479860[77] = 0;
   out_6387601908760479860[78] = 0;
   out_6387601908760479860[79] = 0;
   out_6387601908760479860[80] = 0;
   out_6387601908760479860[81] = 0;
   out_6387601908760479860[82] = 0;
   out_6387601908760479860[83] = 0;
   out_6387601908760479860[84] = 0;
   out_6387601908760479860[85] = 0;
   out_6387601908760479860[86] = 0;
   out_6387601908760479860[87] = 0.5*state[3];
   out_6387601908760479860[88] = 0.5*state[6];
   out_6387601908760479860[89] = -0.5*state[5];
   out_6387601908760479860[90] = 0;
   out_6387601908760479860[91] = 0;
   out_6387601908760479860[92] = 0;
   out_6387601908760479860[93] = 0;
   out_6387601908760479860[94] = 0;
   out_6387601908760479860[95] = 0;
   out_6387601908760479860[96] = 0;
   out_6387601908760479860[97] = 0;
   out_6387601908760479860[98] = 0;
   out_6387601908760479860[99] = 0;
   out_6387601908760479860[100] = 0;
   out_6387601908760479860[101] = 0;
   out_6387601908760479860[102] = 0;
   out_6387601908760479860[103] = 0;
   out_6387601908760479860[104] = 0;
   out_6387601908760479860[105] = 0;
   out_6387601908760479860[106] = 0;
   out_6387601908760479860[107] = 0;
   out_6387601908760479860[108] = -0.5*state[6];
   out_6387601908760479860[109] = 0.5*state[3];
   out_6387601908760479860[110] = 0.5*state[4];
   out_6387601908760479860[111] = 0;
   out_6387601908760479860[112] = 0;
   out_6387601908760479860[113] = 0;
   out_6387601908760479860[114] = 0;
   out_6387601908760479860[115] = 0;
   out_6387601908760479860[116] = 0;
   out_6387601908760479860[117] = 0;
   out_6387601908760479860[118] = 0;
   out_6387601908760479860[119] = 0;
   out_6387601908760479860[120] = 0;
   out_6387601908760479860[121] = 0;
   out_6387601908760479860[122] = 0;
   out_6387601908760479860[123] = 0;
   out_6387601908760479860[124] = 0;
   out_6387601908760479860[125] = 0;
   out_6387601908760479860[126] = 0;
   out_6387601908760479860[127] = 0;
   out_6387601908760479860[128] = 0;
   out_6387601908760479860[129] = 0.5*state[5];
   out_6387601908760479860[130] = -0.5*state[4];
   out_6387601908760479860[131] = 0.5*state[3];
   out_6387601908760479860[132] = 0;
   out_6387601908760479860[133] = 0;
   out_6387601908760479860[134] = 0;
   out_6387601908760479860[135] = 0;
   out_6387601908760479860[136] = 0;
   out_6387601908760479860[137] = 0;
   out_6387601908760479860[138] = 0;
   out_6387601908760479860[139] = 0;
   out_6387601908760479860[140] = 0;
   out_6387601908760479860[141] = 0;
   out_6387601908760479860[142] = 0;
   out_6387601908760479860[143] = 0;
   out_6387601908760479860[144] = 0;
   out_6387601908760479860[145] = 0;
   out_6387601908760479860[146] = 0;
   out_6387601908760479860[147] = 0;
   out_6387601908760479860[148] = 0;
   out_6387601908760479860[149] = 0;
   out_6387601908760479860[150] = 0;
   out_6387601908760479860[151] = 0;
   out_6387601908760479860[152] = 0;
   out_6387601908760479860[153] = 1.0;
   out_6387601908760479860[154] = 0;
   out_6387601908760479860[155] = 0;
   out_6387601908760479860[156] = 0;
   out_6387601908760479860[157] = 0;
   out_6387601908760479860[158] = 0;
   out_6387601908760479860[159] = 0;
   out_6387601908760479860[160] = 0;
   out_6387601908760479860[161] = 0;
   out_6387601908760479860[162] = 0;
   out_6387601908760479860[163] = 0;
   out_6387601908760479860[164] = 0;
   out_6387601908760479860[165] = 0;
   out_6387601908760479860[166] = 0;
   out_6387601908760479860[167] = 0;
   out_6387601908760479860[168] = 0;
   out_6387601908760479860[169] = 0;
   out_6387601908760479860[170] = 0;
   out_6387601908760479860[171] = 0;
   out_6387601908760479860[172] = 0;
   out_6387601908760479860[173] = 0;
   out_6387601908760479860[174] = 0;
   out_6387601908760479860[175] = 1.0;
   out_6387601908760479860[176] = 0;
   out_6387601908760479860[177] = 0;
   out_6387601908760479860[178] = 0;
   out_6387601908760479860[179] = 0;
   out_6387601908760479860[180] = 0;
   out_6387601908760479860[181] = 0;
   out_6387601908760479860[182] = 0;
   out_6387601908760479860[183] = 0;
   out_6387601908760479860[184] = 0;
   out_6387601908760479860[185] = 0;
   out_6387601908760479860[186] = 0;
   out_6387601908760479860[187] = 0;
   out_6387601908760479860[188] = 0;
   out_6387601908760479860[189] = 0;
   out_6387601908760479860[190] = 0;
   out_6387601908760479860[191] = 0;
   out_6387601908760479860[192] = 0;
   out_6387601908760479860[193] = 0;
   out_6387601908760479860[194] = 0;
   out_6387601908760479860[195] = 0;
   out_6387601908760479860[196] = 0;
   out_6387601908760479860[197] = 1.0;
   out_6387601908760479860[198] = 0;
   out_6387601908760479860[199] = 0;
   out_6387601908760479860[200] = 0;
   out_6387601908760479860[201] = 0;
   out_6387601908760479860[202] = 0;
   out_6387601908760479860[203] = 0;
   out_6387601908760479860[204] = 0;
   out_6387601908760479860[205] = 0;
   out_6387601908760479860[206] = 0;
   out_6387601908760479860[207] = 0;
   out_6387601908760479860[208] = 0;
   out_6387601908760479860[209] = 0;
   out_6387601908760479860[210] = 0;
   out_6387601908760479860[211] = 0;
   out_6387601908760479860[212] = 0;
   out_6387601908760479860[213] = 0;
   out_6387601908760479860[214] = 0;
   out_6387601908760479860[215] = 0;
   out_6387601908760479860[216] = 0;
   out_6387601908760479860[217] = 0;
   out_6387601908760479860[218] = 0;
   out_6387601908760479860[219] = 1.0;
   out_6387601908760479860[220] = 0;
   out_6387601908760479860[221] = 0;
   out_6387601908760479860[222] = 0;
   out_6387601908760479860[223] = 0;
   out_6387601908760479860[224] = 0;
   out_6387601908760479860[225] = 0;
   out_6387601908760479860[226] = 0;
   out_6387601908760479860[227] = 0;
   out_6387601908760479860[228] = 0;
   out_6387601908760479860[229] = 0;
   out_6387601908760479860[230] = 0;
   out_6387601908760479860[231] = 0;
   out_6387601908760479860[232] = 0;
   out_6387601908760479860[233] = 0;
   out_6387601908760479860[234] = 0;
   out_6387601908760479860[235] = 0;
   out_6387601908760479860[236] = 0;
   out_6387601908760479860[237] = 0;
   out_6387601908760479860[238] = 0;
   out_6387601908760479860[239] = 0;
   out_6387601908760479860[240] = 0;
   out_6387601908760479860[241] = 1.0;
   out_6387601908760479860[242] = 0;
   out_6387601908760479860[243] = 0;
   out_6387601908760479860[244] = 0;
   out_6387601908760479860[245] = 0;
   out_6387601908760479860[246] = 0;
   out_6387601908760479860[247] = 0;
   out_6387601908760479860[248] = 0;
   out_6387601908760479860[249] = 0;
   out_6387601908760479860[250] = 0;
   out_6387601908760479860[251] = 0;
   out_6387601908760479860[252] = 0;
   out_6387601908760479860[253] = 0;
   out_6387601908760479860[254] = 0;
   out_6387601908760479860[255] = 0;
   out_6387601908760479860[256] = 0;
   out_6387601908760479860[257] = 0;
   out_6387601908760479860[258] = 0;
   out_6387601908760479860[259] = 0;
   out_6387601908760479860[260] = 0;
   out_6387601908760479860[261] = 0;
   out_6387601908760479860[262] = 0;
   out_6387601908760479860[263] = 1.0;
   out_6387601908760479860[264] = 0;
   out_6387601908760479860[265] = 0;
   out_6387601908760479860[266] = 0;
   out_6387601908760479860[267] = 0;
   out_6387601908760479860[268] = 0;
   out_6387601908760479860[269] = 0;
   out_6387601908760479860[270] = 0;
   out_6387601908760479860[271] = 0;
   out_6387601908760479860[272] = 0;
   out_6387601908760479860[273] = 0;
   out_6387601908760479860[274] = 0;
   out_6387601908760479860[275] = 0;
   out_6387601908760479860[276] = 0;
   out_6387601908760479860[277] = 0;
   out_6387601908760479860[278] = 0;
   out_6387601908760479860[279] = 0;
   out_6387601908760479860[280] = 0;
   out_6387601908760479860[281] = 0;
   out_6387601908760479860[282] = 0;
   out_6387601908760479860[283] = 0;
   out_6387601908760479860[284] = 0;
   out_6387601908760479860[285] = 1.0;
   out_6387601908760479860[286] = 0;
   out_6387601908760479860[287] = 0;
   out_6387601908760479860[288] = 0;
   out_6387601908760479860[289] = 0;
   out_6387601908760479860[290] = 0;
   out_6387601908760479860[291] = 0;
   out_6387601908760479860[292] = 0;
   out_6387601908760479860[293] = 0;
   out_6387601908760479860[294] = 0;
   out_6387601908760479860[295] = 0;
   out_6387601908760479860[296] = 0;
   out_6387601908760479860[297] = 0;
   out_6387601908760479860[298] = 0;
   out_6387601908760479860[299] = 0;
   out_6387601908760479860[300] = 0;
   out_6387601908760479860[301] = 0;
   out_6387601908760479860[302] = 0;
   out_6387601908760479860[303] = 0;
   out_6387601908760479860[304] = 0;
   out_6387601908760479860[305] = 0;
   out_6387601908760479860[306] = 0;
   out_6387601908760479860[307] = 1.0;
   out_6387601908760479860[308] = 0;
   out_6387601908760479860[309] = 0;
   out_6387601908760479860[310] = 0;
   out_6387601908760479860[311] = 0;
   out_6387601908760479860[312] = 0;
   out_6387601908760479860[313] = 0;
   out_6387601908760479860[314] = 0;
   out_6387601908760479860[315] = 0;
   out_6387601908760479860[316] = 0;
   out_6387601908760479860[317] = 0;
   out_6387601908760479860[318] = 0;
   out_6387601908760479860[319] = 0;
   out_6387601908760479860[320] = 0;
   out_6387601908760479860[321] = 0;
   out_6387601908760479860[322] = 0;
   out_6387601908760479860[323] = 0;
   out_6387601908760479860[324] = 0;
   out_6387601908760479860[325] = 0;
   out_6387601908760479860[326] = 0;
   out_6387601908760479860[327] = 0;
   out_6387601908760479860[328] = 0;
   out_6387601908760479860[329] = 1.0;
   out_6387601908760479860[330] = 0;
   out_6387601908760479860[331] = 0;
   out_6387601908760479860[332] = 0;
   out_6387601908760479860[333] = 0;
   out_6387601908760479860[334] = 0;
   out_6387601908760479860[335] = 0;
   out_6387601908760479860[336] = 0;
   out_6387601908760479860[337] = 0;
   out_6387601908760479860[338] = 0;
   out_6387601908760479860[339] = 0;
   out_6387601908760479860[340] = 0;
   out_6387601908760479860[341] = 0;
   out_6387601908760479860[342] = 0;
   out_6387601908760479860[343] = 0;
   out_6387601908760479860[344] = 0;
   out_6387601908760479860[345] = 0;
   out_6387601908760479860[346] = 0;
   out_6387601908760479860[347] = 0;
   out_6387601908760479860[348] = 0;
   out_6387601908760479860[349] = 0;
   out_6387601908760479860[350] = 0;
   out_6387601908760479860[351] = 1.0;
   out_6387601908760479860[352] = 0;
   out_6387601908760479860[353] = 0;
   out_6387601908760479860[354] = 0;
   out_6387601908760479860[355] = 0;
   out_6387601908760479860[356] = 0;
   out_6387601908760479860[357] = 0;
   out_6387601908760479860[358] = 0;
   out_6387601908760479860[359] = 0;
   out_6387601908760479860[360] = 0;
   out_6387601908760479860[361] = 0;
   out_6387601908760479860[362] = 0;
   out_6387601908760479860[363] = 0;
   out_6387601908760479860[364] = 0;
   out_6387601908760479860[365] = 0;
   out_6387601908760479860[366] = 0;
   out_6387601908760479860[367] = 0;
   out_6387601908760479860[368] = 0;
   out_6387601908760479860[369] = 0;
   out_6387601908760479860[370] = 0;
   out_6387601908760479860[371] = 0;
   out_6387601908760479860[372] = 0;
   out_6387601908760479860[373] = 1.0;
   out_6387601908760479860[374] = 0;
   out_6387601908760479860[375] = 0;
   out_6387601908760479860[376] = 0;
   out_6387601908760479860[377] = 0;
   out_6387601908760479860[378] = 0;
   out_6387601908760479860[379] = 0;
   out_6387601908760479860[380] = 0;
   out_6387601908760479860[381] = 0;
   out_6387601908760479860[382] = 0;
   out_6387601908760479860[383] = 0;
   out_6387601908760479860[384] = 0;
   out_6387601908760479860[385] = 0;
   out_6387601908760479860[386] = 0;
   out_6387601908760479860[387] = 0;
   out_6387601908760479860[388] = 0;
   out_6387601908760479860[389] = 0;
   out_6387601908760479860[390] = 0;
   out_6387601908760479860[391] = 0;
   out_6387601908760479860[392] = 0;
   out_6387601908760479860[393] = 0;
   out_6387601908760479860[394] = 0;
   out_6387601908760479860[395] = 1.0;
   out_6387601908760479860[396] = 0;
   out_6387601908760479860[397] = 0;
   out_6387601908760479860[398] = 0;
   out_6387601908760479860[399] = 0;
   out_6387601908760479860[400] = 0;
   out_6387601908760479860[401] = 0;
   out_6387601908760479860[402] = 0;
   out_6387601908760479860[403] = 0;
   out_6387601908760479860[404] = 0;
   out_6387601908760479860[405] = 0;
   out_6387601908760479860[406] = 0;
   out_6387601908760479860[407] = 0;
   out_6387601908760479860[408] = 0;
   out_6387601908760479860[409] = 0;
   out_6387601908760479860[410] = 0;
   out_6387601908760479860[411] = 0;
   out_6387601908760479860[412] = 0;
   out_6387601908760479860[413] = 0;
   out_6387601908760479860[414] = 0;
   out_6387601908760479860[415] = 0;
   out_6387601908760479860[416] = 0;
   out_6387601908760479860[417] = 1.0;
   out_6387601908760479860[418] = 0;
   out_6387601908760479860[419] = 0;
   out_6387601908760479860[420] = 0;
   out_6387601908760479860[421] = 0;
   out_6387601908760479860[422] = 0;
   out_6387601908760479860[423] = 0;
   out_6387601908760479860[424] = 0;
   out_6387601908760479860[425] = 0;
   out_6387601908760479860[426] = 0;
   out_6387601908760479860[427] = 0;
   out_6387601908760479860[428] = 0;
   out_6387601908760479860[429] = 0;
   out_6387601908760479860[430] = 0;
   out_6387601908760479860[431] = 0;
   out_6387601908760479860[432] = 0;
   out_6387601908760479860[433] = 0;
   out_6387601908760479860[434] = 0;
   out_6387601908760479860[435] = 0;
   out_6387601908760479860[436] = 0;
   out_6387601908760479860[437] = 0;
   out_6387601908760479860[438] = 0;
   out_6387601908760479860[439] = 1.0;
   out_6387601908760479860[440] = 0;
   out_6387601908760479860[441] = 0;
   out_6387601908760479860[442] = 0;
   out_6387601908760479860[443] = 0;
   out_6387601908760479860[444] = 0;
   out_6387601908760479860[445] = 0;
   out_6387601908760479860[446] = 0;
   out_6387601908760479860[447] = 0;
   out_6387601908760479860[448] = 0;
   out_6387601908760479860[449] = 0;
   out_6387601908760479860[450] = 0;
   out_6387601908760479860[451] = 0;
   out_6387601908760479860[452] = 0;
   out_6387601908760479860[453] = 0;
   out_6387601908760479860[454] = 0;
   out_6387601908760479860[455] = 0;
   out_6387601908760479860[456] = 0;
   out_6387601908760479860[457] = 0;
   out_6387601908760479860[458] = 0;
   out_6387601908760479860[459] = 0;
   out_6387601908760479860[460] = 0;
   out_6387601908760479860[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2644681283468648566) {
   out_2644681283468648566[0] = dt*state[7] + state[0];
   out_2644681283468648566[1] = dt*state[8] + state[1];
   out_2644681283468648566[2] = dt*state[9] + state[2];
   out_2644681283468648566[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2644681283468648566[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2644681283468648566[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2644681283468648566[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2644681283468648566[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2644681283468648566[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2644681283468648566[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2644681283468648566[10] = state[10];
   out_2644681283468648566[11] = state[11];
   out_2644681283468648566[12] = state[12];
   out_2644681283468648566[13] = state[13];
   out_2644681283468648566[14] = state[14];
   out_2644681283468648566[15] = state[15];
   out_2644681283468648566[16] = state[16];
   out_2644681283468648566[17] = state[17];
   out_2644681283468648566[18] = state[18];
   out_2644681283468648566[19] = state[19];
   out_2644681283468648566[20] = state[20];
   out_2644681283468648566[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7072203675530199062) {
   out_7072203675530199062[0] = 1;
   out_7072203675530199062[1] = 0;
   out_7072203675530199062[2] = 0;
   out_7072203675530199062[3] = 0;
   out_7072203675530199062[4] = 0;
   out_7072203675530199062[5] = 0;
   out_7072203675530199062[6] = dt;
   out_7072203675530199062[7] = 0;
   out_7072203675530199062[8] = 0;
   out_7072203675530199062[9] = 0;
   out_7072203675530199062[10] = 0;
   out_7072203675530199062[11] = 0;
   out_7072203675530199062[12] = 0;
   out_7072203675530199062[13] = 0;
   out_7072203675530199062[14] = 0;
   out_7072203675530199062[15] = 0;
   out_7072203675530199062[16] = 0;
   out_7072203675530199062[17] = 0;
   out_7072203675530199062[18] = 0;
   out_7072203675530199062[19] = 0;
   out_7072203675530199062[20] = 0;
   out_7072203675530199062[21] = 0;
   out_7072203675530199062[22] = 1;
   out_7072203675530199062[23] = 0;
   out_7072203675530199062[24] = 0;
   out_7072203675530199062[25] = 0;
   out_7072203675530199062[26] = 0;
   out_7072203675530199062[27] = 0;
   out_7072203675530199062[28] = dt;
   out_7072203675530199062[29] = 0;
   out_7072203675530199062[30] = 0;
   out_7072203675530199062[31] = 0;
   out_7072203675530199062[32] = 0;
   out_7072203675530199062[33] = 0;
   out_7072203675530199062[34] = 0;
   out_7072203675530199062[35] = 0;
   out_7072203675530199062[36] = 0;
   out_7072203675530199062[37] = 0;
   out_7072203675530199062[38] = 0;
   out_7072203675530199062[39] = 0;
   out_7072203675530199062[40] = 0;
   out_7072203675530199062[41] = 0;
   out_7072203675530199062[42] = 0;
   out_7072203675530199062[43] = 0;
   out_7072203675530199062[44] = 1;
   out_7072203675530199062[45] = 0;
   out_7072203675530199062[46] = 0;
   out_7072203675530199062[47] = 0;
   out_7072203675530199062[48] = 0;
   out_7072203675530199062[49] = 0;
   out_7072203675530199062[50] = dt;
   out_7072203675530199062[51] = 0;
   out_7072203675530199062[52] = 0;
   out_7072203675530199062[53] = 0;
   out_7072203675530199062[54] = 0;
   out_7072203675530199062[55] = 0;
   out_7072203675530199062[56] = 0;
   out_7072203675530199062[57] = 0;
   out_7072203675530199062[58] = 0;
   out_7072203675530199062[59] = 0;
   out_7072203675530199062[60] = 0;
   out_7072203675530199062[61] = 0;
   out_7072203675530199062[62] = 0;
   out_7072203675530199062[63] = 0;
   out_7072203675530199062[64] = 0;
   out_7072203675530199062[65] = 0;
   out_7072203675530199062[66] = 1;
   out_7072203675530199062[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7072203675530199062[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7072203675530199062[69] = 0;
   out_7072203675530199062[70] = 0;
   out_7072203675530199062[71] = 0;
   out_7072203675530199062[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7072203675530199062[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7072203675530199062[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7072203675530199062[75] = 0;
   out_7072203675530199062[76] = 0;
   out_7072203675530199062[77] = 0;
   out_7072203675530199062[78] = 0;
   out_7072203675530199062[79] = 0;
   out_7072203675530199062[80] = 0;
   out_7072203675530199062[81] = 0;
   out_7072203675530199062[82] = 0;
   out_7072203675530199062[83] = 0;
   out_7072203675530199062[84] = 0;
   out_7072203675530199062[85] = 0;
   out_7072203675530199062[86] = 0;
   out_7072203675530199062[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7072203675530199062[88] = 1;
   out_7072203675530199062[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7072203675530199062[90] = 0;
   out_7072203675530199062[91] = 0;
   out_7072203675530199062[92] = 0;
   out_7072203675530199062[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7072203675530199062[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7072203675530199062[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7072203675530199062[96] = 0;
   out_7072203675530199062[97] = 0;
   out_7072203675530199062[98] = 0;
   out_7072203675530199062[99] = 0;
   out_7072203675530199062[100] = 0;
   out_7072203675530199062[101] = 0;
   out_7072203675530199062[102] = 0;
   out_7072203675530199062[103] = 0;
   out_7072203675530199062[104] = 0;
   out_7072203675530199062[105] = 0;
   out_7072203675530199062[106] = 0;
   out_7072203675530199062[107] = 0;
   out_7072203675530199062[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7072203675530199062[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7072203675530199062[110] = 1;
   out_7072203675530199062[111] = 0;
   out_7072203675530199062[112] = 0;
   out_7072203675530199062[113] = 0;
   out_7072203675530199062[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7072203675530199062[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7072203675530199062[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7072203675530199062[117] = 0;
   out_7072203675530199062[118] = 0;
   out_7072203675530199062[119] = 0;
   out_7072203675530199062[120] = 0;
   out_7072203675530199062[121] = 0;
   out_7072203675530199062[122] = 0;
   out_7072203675530199062[123] = 0;
   out_7072203675530199062[124] = 0;
   out_7072203675530199062[125] = 0;
   out_7072203675530199062[126] = 0;
   out_7072203675530199062[127] = 0;
   out_7072203675530199062[128] = 0;
   out_7072203675530199062[129] = 0;
   out_7072203675530199062[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7072203675530199062[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7072203675530199062[132] = 1;
   out_7072203675530199062[133] = 0;
   out_7072203675530199062[134] = 0;
   out_7072203675530199062[135] = 0;
   out_7072203675530199062[136] = 0;
   out_7072203675530199062[137] = 0;
   out_7072203675530199062[138] = 0;
   out_7072203675530199062[139] = 0;
   out_7072203675530199062[140] = 0;
   out_7072203675530199062[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7072203675530199062[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7072203675530199062[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7072203675530199062[144] = 0;
   out_7072203675530199062[145] = 0;
   out_7072203675530199062[146] = 0;
   out_7072203675530199062[147] = 0;
   out_7072203675530199062[148] = 0;
   out_7072203675530199062[149] = 0;
   out_7072203675530199062[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7072203675530199062[151] = 0;
   out_7072203675530199062[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7072203675530199062[153] = 0;
   out_7072203675530199062[154] = 1;
   out_7072203675530199062[155] = 0;
   out_7072203675530199062[156] = 0;
   out_7072203675530199062[157] = 0;
   out_7072203675530199062[158] = 0;
   out_7072203675530199062[159] = 0;
   out_7072203675530199062[160] = 0;
   out_7072203675530199062[161] = 0;
   out_7072203675530199062[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7072203675530199062[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7072203675530199062[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7072203675530199062[165] = 0;
   out_7072203675530199062[166] = 0;
   out_7072203675530199062[167] = 0;
   out_7072203675530199062[168] = 0;
   out_7072203675530199062[169] = 0;
   out_7072203675530199062[170] = 0;
   out_7072203675530199062[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7072203675530199062[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7072203675530199062[173] = 0;
   out_7072203675530199062[174] = 0;
   out_7072203675530199062[175] = 0;
   out_7072203675530199062[176] = 1;
   out_7072203675530199062[177] = 0;
   out_7072203675530199062[178] = 0;
   out_7072203675530199062[179] = 0;
   out_7072203675530199062[180] = 0;
   out_7072203675530199062[181] = 0;
   out_7072203675530199062[182] = 0;
   out_7072203675530199062[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7072203675530199062[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7072203675530199062[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7072203675530199062[186] = 0;
   out_7072203675530199062[187] = 0;
   out_7072203675530199062[188] = 0;
   out_7072203675530199062[189] = 0;
   out_7072203675530199062[190] = 0;
   out_7072203675530199062[191] = 0;
   out_7072203675530199062[192] = 0;
   out_7072203675530199062[193] = 0;
   out_7072203675530199062[194] = 0;
   out_7072203675530199062[195] = 0;
   out_7072203675530199062[196] = 0;
   out_7072203675530199062[197] = 0;
   out_7072203675530199062[198] = 1;
   out_7072203675530199062[199] = 0;
   out_7072203675530199062[200] = 0;
   out_7072203675530199062[201] = 0;
   out_7072203675530199062[202] = 0;
   out_7072203675530199062[203] = 0;
   out_7072203675530199062[204] = 0;
   out_7072203675530199062[205] = 0;
   out_7072203675530199062[206] = 0;
   out_7072203675530199062[207] = 0;
   out_7072203675530199062[208] = 0;
   out_7072203675530199062[209] = 0;
   out_7072203675530199062[210] = 0;
   out_7072203675530199062[211] = 0;
   out_7072203675530199062[212] = 0;
   out_7072203675530199062[213] = 0;
   out_7072203675530199062[214] = 0;
   out_7072203675530199062[215] = 0;
   out_7072203675530199062[216] = 0;
   out_7072203675530199062[217] = 0;
   out_7072203675530199062[218] = 0;
   out_7072203675530199062[219] = 0;
   out_7072203675530199062[220] = 1;
   out_7072203675530199062[221] = 0;
   out_7072203675530199062[222] = 0;
   out_7072203675530199062[223] = 0;
   out_7072203675530199062[224] = 0;
   out_7072203675530199062[225] = 0;
   out_7072203675530199062[226] = 0;
   out_7072203675530199062[227] = 0;
   out_7072203675530199062[228] = 0;
   out_7072203675530199062[229] = 0;
   out_7072203675530199062[230] = 0;
   out_7072203675530199062[231] = 0;
   out_7072203675530199062[232] = 0;
   out_7072203675530199062[233] = 0;
   out_7072203675530199062[234] = 0;
   out_7072203675530199062[235] = 0;
   out_7072203675530199062[236] = 0;
   out_7072203675530199062[237] = 0;
   out_7072203675530199062[238] = 0;
   out_7072203675530199062[239] = 0;
   out_7072203675530199062[240] = 0;
   out_7072203675530199062[241] = 0;
   out_7072203675530199062[242] = 1;
   out_7072203675530199062[243] = 0;
   out_7072203675530199062[244] = 0;
   out_7072203675530199062[245] = 0;
   out_7072203675530199062[246] = 0;
   out_7072203675530199062[247] = 0;
   out_7072203675530199062[248] = 0;
   out_7072203675530199062[249] = 0;
   out_7072203675530199062[250] = 0;
   out_7072203675530199062[251] = 0;
   out_7072203675530199062[252] = 0;
   out_7072203675530199062[253] = 0;
   out_7072203675530199062[254] = 0;
   out_7072203675530199062[255] = 0;
   out_7072203675530199062[256] = 0;
   out_7072203675530199062[257] = 0;
   out_7072203675530199062[258] = 0;
   out_7072203675530199062[259] = 0;
   out_7072203675530199062[260] = 0;
   out_7072203675530199062[261] = 0;
   out_7072203675530199062[262] = 0;
   out_7072203675530199062[263] = 0;
   out_7072203675530199062[264] = 1;
   out_7072203675530199062[265] = 0;
   out_7072203675530199062[266] = 0;
   out_7072203675530199062[267] = 0;
   out_7072203675530199062[268] = 0;
   out_7072203675530199062[269] = 0;
   out_7072203675530199062[270] = 0;
   out_7072203675530199062[271] = 0;
   out_7072203675530199062[272] = 0;
   out_7072203675530199062[273] = 0;
   out_7072203675530199062[274] = 0;
   out_7072203675530199062[275] = 0;
   out_7072203675530199062[276] = 0;
   out_7072203675530199062[277] = 0;
   out_7072203675530199062[278] = 0;
   out_7072203675530199062[279] = 0;
   out_7072203675530199062[280] = 0;
   out_7072203675530199062[281] = 0;
   out_7072203675530199062[282] = 0;
   out_7072203675530199062[283] = 0;
   out_7072203675530199062[284] = 0;
   out_7072203675530199062[285] = 0;
   out_7072203675530199062[286] = 1;
   out_7072203675530199062[287] = 0;
   out_7072203675530199062[288] = 0;
   out_7072203675530199062[289] = 0;
   out_7072203675530199062[290] = 0;
   out_7072203675530199062[291] = 0;
   out_7072203675530199062[292] = 0;
   out_7072203675530199062[293] = 0;
   out_7072203675530199062[294] = 0;
   out_7072203675530199062[295] = 0;
   out_7072203675530199062[296] = 0;
   out_7072203675530199062[297] = 0;
   out_7072203675530199062[298] = 0;
   out_7072203675530199062[299] = 0;
   out_7072203675530199062[300] = 0;
   out_7072203675530199062[301] = 0;
   out_7072203675530199062[302] = 0;
   out_7072203675530199062[303] = 0;
   out_7072203675530199062[304] = 0;
   out_7072203675530199062[305] = 0;
   out_7072203675530199062[306] = 0;
   out_7072203675530199062[307] = 0;
   out_7072203675530199062[308] = 1;
   out_7072203675530199062[309] = 0;
   out_7072203675530199062[310] = 0;
   out_7072203675530199062[311] = 0;
   out_7072203675530199062[312] = 0;
   out_7072203675530199062[313] = 0;
   out_7072203675530199062[314] = 0;
   out_7072203675530199062[315] = 0;
   out_7072203675530199062[316] = 0;
   out_7072203675530199062[317] = 0;
   out_7072203675530199062[318] = 0;
   out_7072203675530199062[319] = 0;
   out_7072203675530199062[320] = 0;
   out_7072203675530199062[321] = 0;
   out_7072203675530199062[322] = 0;
   out_7072203675530199062[323] = 0;
   out_7072203675530199062[324] = 0;
   out_7072203675530199062[325] = 0;
   out_7072203675530199062[326] = 0;
   out_7072203675530199062[327] = 0;
   out_7072203675530199062[328] = 0;
   out_7072203675530199062[329] = 0;
   out_7072203675530199062[330] = 1;
   out_7072203675530199062[331] = 0;
   out_7072203675530199062[332] = 0;
   out_7072203675530199062[333] = 0;
   out_7072203675530199062[334] = 0;
   out_7072203675530199062[335] = 0;
   out_7072203675530199062[336] = 0;
   out_7072203675530199062[337] = 0;
   out_7072203675530199062[338] = 0;
   out_7072203675530199062[339] = 0;
   out_7072203675530199062[340] = 0;
   out_7072203675530199062[341] = 0;
   out_7072203675530199062[342] = 0;
   out_7072203675530199062[343] = 0;
   out_7072203675530199062[344] = 0;
   out_7072203675530199062[345] = 0;
   out_7072203675530199062[346] = 0;
   out_7072203675530199062[347] = 0;
   out_7072203675530199062[348] = 0;
   out_7072203675530199062[349] = 0;
   out_7072203675530199062[350] = 0;
   out_7072203675530199062[351] = 0;
   out_7072203675530199062[352] = 1;
   out_7072203675530199062[353] = 0;
   out_7072203675530199062[354] = 0;
   out_7072203675530199062[355] = 0;
   out_7072203675530199062[356] = 0;
   out_7072203675530199062[357] = 0;
   out_7072203675530199062[358] = 0;
   out_7072203675530199062[359] = 0;
   out_7072203675530199062[360] = 0;
   out_7072203675530199062[361] = 0;
   out_7072203675530199062[362] = 0;
   out_7072203675530199062[363] = 0;
   out_7072203675530199062[364] = 0;
   out_7072203675530199062[365] = 0;
   out_7072203675530199062[366] = 0;
   out_7072203675530199062[367] = 0;
   out_7072203675530199062[368] = 0;
   out_7072203675530199062[369] = 0;
   out_7072203675530199062[370] = 0;
   out_7072203675530199062[371] = 0;
   out_7072203675530199062[372] = 0;
   out_7072203675530199062[373] = 0;
   out_7072203675530199062[374] = 1;
   out_7072203675530199062[375] = 0;
   out_7072203675530199062[376] = 0;
   out_7072203675530199062[377] = 0;
   out_7072203675530199062[378] = 0;
   out_7072203675530199062[379] = 0;
   out_7072203675530199062[380] = 0;
   out_7072203675530199062[381] = 0;
   out_7072203675530199062[382] = 0;
   out_7072203675530199062[383] = 0;
   out_7072203675530199062[384] = 0;
   out_7072203675530199062[385] = 0;
   out_7072203675530199062[386] = 0;
   out_7072203675530199062[387] = 0;
   out_7072203675530199062[388] = 0;
   out_7072203675530199062[389] = 0;
   out_7072203675530199062[390] = 0;
   out_7072203675530199062[391] = 0;
   out_7072203675530199062[392] = 0;
   out_7072203675530199062[393] = 0;
   out_7072203675530199062[394] = 0;
   out_7072203675530199062[395] = 0;
   out_7072203675530199062[396] = 1;
   out_7072203675530199062[397] = 0;
   out_7072203675530199062[398] = 0;
   out_7072203675530199062[399] = 0;
   out_7072203675530199062[400] = 0;
   out_7072203675530199062[401] = 0;
   out_7072203675530199062[402] = 0;
   out_7072203675530199062[403] = 0;
   out_7072203675530199062[404] = 0;
   out_7072203675530199062[405] = 0;
   out_7072203675530199062[406] = 0;
   out_7072203675530199062[407] = 0;
   out_7072203675530199062[408] = 0;
   out_7072203675530199062[409] = 0;
   out_7072203675530199062[410] = 0;
   out_7072203675530199062[411] = 0;
   out_7072203675530199062[412] = 0;
   out_7072203675530199062[413] = 0;
   out_7072203675530199062[414] = 0;
   out_7072203675530199062[415] = 0;
   out_7072203675530199062[416] = 0;
   out_7072203675530199062[417] = 0;
   out_7072203675530199062[418] = 1;
   out_7072203675530199062[419] = 0;
   out_7072203675530199062[420] = 0;
   out_7072203675530199062[421] = 0;
   out_7072203675530199062[422] = 0;
   out_7072203675530199062[423] = 0;
   out_7072203675530199062[424] = 0;
   out_7072203675530199062[425] = 0;
   out_7072203675530199062[426] = 0;
   out_7072203675530199062[427] = 0;
   out_7072203675530199062[428] = 0;
   out_7072203675530199062[429] = 0;
   out_7072203675530199062[430] = 0;
   out_7072203675530199062[431] = 0;
   out_7072203675530199062[432] = 0;
   out_7072203675530199062[433] = 0;
   out_7072203675530199062[434] = 0;
   out_7072203675530199062[435] = 0;
   out_7072203675530199062[436] = 0;
   out_7072203675530199062[437] = 0;
   out_7072203675530199062[438] = 0;
   out_7072203675530199062[439] = 0;
   out_7072203675530199062[440] = 1;
}
void h_4(double *state, double *unused, double *out_563680518451919752) {
   out_563680518451919752[0] = state[10] + state[13];
   out_563680518451919752[1] = state[11] + state[14];
   out_563680518451919752[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3231227212246200753) {
   out_3231227212246200753[0] = 0;
   out_3231227212246200753[1] = 0;
   out_3231227212246200753[2] = 0;
   out_3231227212246200753[3] = 0;
   out_3231227212246200753[4] = 0;
   out_3231227212246200753[5] = 0;
   out_3231227212246200753[6] = 0;
   out_3231227212246200753[7] = 0;
   out_3231227212246200753[8] = 0;
   out_3231227212246200753[9] = 0;
   out_3231227212246200753[10] = 1;
   out_3231227212246200753[11] = 0;
   out_3231227212246200753[12] = 0;
   out_3231227212246200753[13] = 1;
   out_3231227212246200753[14] = 0;
   out_3231227212246200753[15] = 0;
   out_3231227212246200753[16] = 0;
   out_3231227212246200753[17] = 0;
   out_3231227212246200753[18] = 0;
   out_3231227212246200753[19] = 0;
   out_3231227212246200753[20] = 0;
   out_3231227212246200753[21] = 0;
   out_3231227212246200753[22] = 0;
   out_3231227212246200753[23] = 0;
   out_3231227212246200753[24] = 0;
   out_3231227212246200753[25] = 0;
   out_3231227212246200753[26] = 0;
   out_3231227212246200753[27] = 0;
   out_3231227212246200753[28] = 0;
   out_3231227212246200753[29] = 0;
   out_3231227212246200753[30] = 0;
   out_3231227212246200753[31] = 0;
   out_3231227212246200753[32] = 0;
   out_3231227212246200753[33] = 1;
   out_3231227212246200753[34] = 0;
   out_3231227212246200753[35] = 0;
   out_3231227212246200753[36] = 1;
   out_3231227212246200753[37] = 0;
   out_3231227212246200753[38] = 0;
   out_3231227212246200753[39] = 0;
   out_3231227212246200753[40] = 0;
   out_3231227212246200753[41] = 0;
   out_3231227212246200753[42] = 0;
   out_3231227212246200753[43] = 0;
   out_3231227212246200753[44] = 0;
   out_3231227212246200753[45] = 0;
   out_3231227212246200753[46] = 0;
   out_3231227212246200753[47] = 0;
   out_3231227212246200753[48] = 0;
   out_3231227212246200753[49] = 0;
   out_3231227212246200753[50] = 0;
   out_3231227212246200753[51] = 0;
   out_3231227212246200753[52] = 0;
   out_3231227212246200753[53] = 0;
   out_3231227212246200753[54] = 0;
   out_3231227212246200753[55] = 0;
   out_3231227212246200753[56] = 1;
   out_3231227212246200753[57] = 0;
   out_3231227212246200753[58] = 0;
   out_3231227212246200753[59] = 1;
   out_3231227212246200753[60] = 0;
   out_3231227212246200753[61] = 0;
   out_3231227212246200753[62] = 0;
   out_3231227212246200753[63] = 0;
   out_3231227212246200753[64] = 0;
   out_3231227212246200753[65] = 0;
}
void h_9(double *state, double *unused, double *out_3347631837389681515) {
   out_3347631837389681515[0] = state[10];
   out_3347631837389681515[1] = state[11];
   out_3347631837389681515[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2990037565616610108) {
   out_2990037565616610108[0] = 0;
   out_2990037565616610108[1] = 0;
   out_2990037565616610108[2] = 0;
   out_2990037565616610108[3] = 0;
   out_2990037565616610108[4] = 0;
   out_2990037565616610108[5] = 0;
   out_2990037565616610108[6] = 0;
   out_2990037565616610108[7] = 0;
   out_2990037565616610108[8] = 0;
   out_2990037565616610108[9] = 0;
   out_2990037565616610108[10] = 1;
   out_2990037565616610108[11] = 0;
   out_2990037565616610108[12] = 0;
   out_2990037565616610108[13] = 0;
   out_2990037565616610108[14] = 0;
   out_2990037565616610108[15] = 0;
   out_2990037565616610108[16] = 0;
   out_2990037565616610108[17] = 0;
   out_2990037565616610108[18] = 0;
   out_2990037565616610108[19] = 0;
   out_2990037565616610108[20] = 0;
   out_2990037565616610108[21] = 0;
   out_2990037565616610108[22] = 0;
   out_2990037565616610108[23] = 0;
   out_2990037565616610108[24] = 0;
   out_2990037565616610108[25] = 0;
   out_2990037565616610108[26] = 0;
   out_2990037565616610108[27] = 0;
   out_2990037565616610108[28] = 0;
   out_2990037565616610108[29] = 0;
   out_2990037565616610108[30] = 0;
   out_2990037565616610108[31] = 0;
   out_2990037565616610108[32] = 0;
   out_2990037565616610108[33] = 1;
   out_2990037565616610108[34] = 0;
   out_2990037565616610108[35] = 0;
   out_2990037565616610108[36] = 0;
   out_2990037565616610108[37] = 0;
   out_2990037565616610108[38] = 0;
   out_2990037565616610108[39] = 0;
   out_2990037565616610108[40] = 0;
   out_2990037565616610108[41] = 0;
   out_2990037565616610108[42] = 0;
   out_2990037565616610108[43] = 0;
   out_2990037565616610108[44] = 0;
   out_2990037565616610108[45] = 0;
   out_2990037565616610108[46] = 0;
   out_2990037565616610108[47] = 0;
   out_2990037565616610108[48] = 0;
   out_2990037565616610108[49] = 0;
   out_2990037565616610108[50] = 0;
   out_2990037565616610108[51] = 0;
   out_2990037565616610108[52] = 0;
   out_2990037565616610108[53] = 0;
   out_2990037565616610108[54] = 0;
   out_2990037565616610108[55] = 0;
   out_2990037565616610108[56] = 1;
   out_2990037565616610108[57] = 0;
   out_2990037565616610108[58] = 0;
   out_2990037565616610108[59] = 0;
   out_2990037565616610108[60] = 0;
   out_2990037565616610108[61] = 0;
   out_2990037565616610108[62] = 0;
   out_2990037565616610108[63] = 0;
   out_2990037565616610108[64] = 0;
   out_2990037565616610108[65] = 0;
}
void h_10(double *state, double *unused, double *out_4158589424796333618) {
   out_4158589424796333618[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4158589424796333618[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4158589424796333618[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2024137388413149700) {
   out_2024137388413149700[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2024137388413149700[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2024137388413149700[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2024137388413149700[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2024137388413149700[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2024137388413149700[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2024137388413149700[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2024137388413149700[7] = 0;
   out_2024137388413149700[8] = 0;
   out_2024137388413149700[9] = 0;
   out_2024137388413149700[10] = 0;
   out_2024137388413149700[11] = 0;
   out_2024137388413149700[12] = 0;
   out_2024137388413149700[13] = 0;
   out_2024137388413149700[14] = 0;
   out_2024137388413149700[15] = 0;
   out_2024137388413149700[16] = 1;
   out_2024137388413149700[17] = 0;
   out_2024137388413149700[18] = 0;
   out_2024137388413149700[19] = 1;
   out_2024137388413149700[20] = 0;
   out_2024137388413149700[21] = 0;
   out_2024137388413149700[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2024137388413149700[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2024137388413149700[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2024137388413149700[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2024137388413149700[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2024137388413149700[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2024137388413149700[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2024137388413149700[29] = 0;
   out_2024137388413149700[30] = 0;
   out_2024137388413149700[31] = 0;
   out_2024137388413149700[32] = 0;
   out_2024137388413149700[33] = 0;
   out_2024137388413149700[34] = 0;
   out_2024137388413149700[35] = 0;
   out_2024137388413149700[36] = 0;
   out_2024137388413149700[37] = 0;
   out_2024137388413149700[38] = 0;
   out_2024137388413149700[39] = 1;
   out_2024137388413149700[40] = 0;
   out_2024137388413149700[41] = 0;
   out_2024137388413149700[42] = 1;
   out_2024137388413149700[43] = 0;
   out_2024137388413149700[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2024137388413149700[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2024137388413149700[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2024137388413149700[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2024137388413149700[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2024137388413149700[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2024137388413149700[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2024137388413149700[51] = 0;
   out_2024137388413149700[52] = 0;
   out_2024137388413149700[53] = 0;
   out_2024137388413149700[54] = 0;
   out_2024137388413149700[55] = 0;
   out_2024137388413149700[56] = 0;
   out_2024137388413149700[57] = 0;
   out_2024137388413149700[58] = 0;
   out_2024137388413149700[59] = 0;
   out_2024137388413149700[60] = 0;
   out_2024137388413149700[61] = 0;
   out_2024137388413149700[62] = 1;
   out_2024137388413149700[63] = 0;
   out_2024137388413149700[64] = 0;
   out_2024137388413149700[65] = 1;
}
void h_12(double *state, double *unused, double *out_3670144666999023199) {
   out_3670144666999023199[0] = state[0];
   out_3670144666999023199[1] = state[1];
   out_3670144666999023199[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1788229195785761042) {
   out_1788229195785761042[0] = 1;
   out_1788229195785761042[1] = 0;
   out_1788229195785761042[2] = 0;
   out_1788229195785761042[3] = 0;
   out_1788229195785761042[4] = 0;
   out_1788229195785761042[5] = 0;
   out_1788229195785761042[6] = 0;
   out_1788229195785761042[7] = 0;
   out_1788229195785761042[8] = 0;
   out_1788229195785761042[9] = 0;
   out_1788229195785761042[10] = 0;
   out_1788229195785761042[11] = 0;
   out_1788229195785761042[12] = 0;
   out_1788229195785761042[13] = 0;
   out_1788229195785761042[14] = 0;
   out_1788229195785761042[15] = 0;
   out_1788229195785761042[16] = 0;
   out_1788229195785761042[17] = 0;
   out_1788229195785761042[18] = 0;
   out_1788229195785761042[19] = 0;
   out_1788229195785761042[20] = 0;
   out_1788229195785761042[21] = 0;
   out_1788229195785761042[22] = 0;
   out_1788229195785761042[23] = 1;
   out_1788229195785761042[24] = 0;
   out_1788229195785761042[25] = 0;
   out_1788229195785761042[26] = 0;
   out_1788229195785761042[27] = 0;
   out_1788229195785761042[28] = 0;
   out_1788229195785761042[29] = 0;
   out_1788229195785761042[30] = 0;
   out_1788229195785761042[31] = 0;
   out_1788229195785761042[32] = 0;
   out_1788229195785761042[33] = 0;
   out_1788229195785761042[34] = 0;
   out_1788229195785761042[35] = 0;
   out_1788229195785761042[36] = 0;
   out_1788229195785761042[37] = 0;
   out_1788229195785761042[38] = 0;
   out_1788229195785761042[39] = 0;
   out_1788229195785761042[40] = 0;
   out_1788229195785761042[41] = 0;
   out_1788229195785761042[42] = 0;
   out_1788229195785761042[43] = 0;
   out_1788229195785761042[44] = 0;
   out_1788229195785761042[45] = 0;
   out_1788229195785761042[46] = 1;
   out_1788229195785761042[47] = 0;
   out_1788229195785761042[48] = 0;
   out_1788229195785761042[49] = 0;
   out_1788229195785761042[50] = 0;
   out_1788229195785761042[51] = 0;
   out_1788229195785761042[52] = 0;
   out_1788229195785761042[53] = 0;
   out_1788229195785761042[54] = 0;
   out_1788229195785761042[55] = 0;
   out_1788229195785761042[56] = 0;
   out_1788229195785761042[57] = 0;
   out_1788229195785761042[58] = 0;
   out_1788229195785761042[59] = 0;
   out_1788229195785761042[60] = 0;
   out_1788229195785761042[61] = 0;
   out_1788229195785761042[62] = 0;
   out_1788229195785761042[63] = 0;
   out_1788229195785761042[64] = 0;
   out_1788229195785761042[65] = 0;
}
void h_35(double *state, double *unused, double *out_2017282508012269633) {
   out_2017282508012269633[0] = state[7];
   out_2017282508012269633[1] = state[8];
   out_2017282508012269633[2] = state[9];
}
void H_35(double *state, double *unused, double *out_135434845126406623) {
   out_135434845126406623[0] = 0;
   out_135434845126406623[1] = 0;
   out_135434845126406623[2] = 0;
   out_135434845126406623[3] = 0;
   out_135434845126406623[4] = 0;
   out_135434845126406623[5] = 0;
   out_135434845126406623[6] = 0;
   out_135434845126406623[7] = 1;
   out_135434845126406623[8] = 0;
   out_135434845126406623[9] = 0;
   out_135434845126406623[10] = 0;
   out_135434845126406623[11] = 0;
   out_135434845126406623[12] = 0;
   out_135434845126406623[13] = 0;
   out_135434845126406623[14] = 0;
   out_135434845126406623[15] = 0;
   out_135434845126406623[16] = 0;
   out_135434845126406623[17] = 0;
   out_135434845126406623[18] = 0;
   out_135434845126406623[19] = 0;
   out_135434845126406623[20] = 0;
   out_135434845126406623[21] = 0;
   out_135434845126406623[22] = 0;
   out_135434845126406623[23] = 0;
   out_135434845126406623[24] = 0;
   out_135434845126406623[25] = 0;
   out_135434845126406623[26] = 0;
   out_135434845126406623[27] = 0;
   out_135434845126406623[28] = 0;
   out_135434845126406623[29] = 0;
   out_135434845126406623[30] = 1;
   out_135434845126406623[31] = 0;
   out_135434845126406623[32] = 0;
   out_135434845126406623[33] = 0;
   out_135434845126406623[34] = 0;
   out_135434845126406623[35] = 0;
   out_135434845126406623[36] = 0;
   out_135434845126406623[37] = 0;
   out_135434845126406623[38] = 0;
   out_135434845126406623[39] = 0;
   out_135434845126406623[40] = 0;
   out_135434845126406623[41] = 0;
   out_135434845126406623[42] = 0;
   out_135434845126406623[43] = 0;
   out_135434845126406623[44] = 0;
   out_135434845126406623[45] = 0;
   out_135434845126406623[46] = 0;
   out_135434845126406623[47] = 0;
   out_135434845126406623[48] = 0;
   out_135434845126406623[49] = 0;
   out_135434845126406623[50] = 0;
   out_135434845126406623[51] = 0;
   out_135434845126406623[52] = 0;
   out_135434845126406623[53] = 1;
   out_135434845126406623[54] = 0;
   out_135434845126406623[55] = 0;
   out_135434845126406623[56] = 0;
   out_135434845126406623[57] = 0;
   out_135434845126406623[58] = 0;
   out_135434845126406623[59] = 0;
   out_135434845126406623[60] = 0;
   out_135434845126406623[61] = 0;
   out_135434845126406623[62] = 0;
   out_135434845126406623[63] = 0;
   out_135434845126406623[64] = 0;
   out_135434845126406623[65] = 0;
}
void h_32(double *state, double *unused, double *out_6789382851101083323) {
   out_6789382851101083323[0] = state[3];
   out_6789382851101083323[1] = state[4];
   out_6789382851101083323[2] = state[5];
   out_6789382851101083323[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6779429658567709733) {
   out_6779429658567709733[0] = 0;
   out_6779429658567709733[1] = 0;
   out_6779429658567709733[2] = 0;
   out_6779429658567709733[3] = 1;
   out_6779429658567709733[4] = 0;
   out_6779429658567709733[5] = 0;
   out_6779429658567709733[6] = 0;
   out_6779429658567709733[7] = 0;
   out_6779429658567709733[8] = 0;
   out_6779429658567709733[9] = 0;
   out_6779429658567709733[10] = 0;
   out_6779429658567709733[11] = 0;
   out_6779429658567709733[12] = 0;
   out_6779429658567709733[13] = 0;
   out_6779429658567709733[14] = 0;
   out_6779429658567709733[15] = 0;
   out_6779429658567709733[16] = 0;
   out_6779429658567709733[17] = 0;
   out_6779429658567709733[18] = 0;
   out_6779429658567709733[19] = 0;
   out_6779429658567709733[20] = 0;
   out_6779429658567709733[21] = 0;
   out_6779429658567709733[22] = 0;
   out_6779429658567709733[23] = 0;
   out_6779429658567709733[24] = 0;
   out_6779429658567709733[25] = 0;
   out_6779429658567709733[26] = 1;
   out_6779429658567709733[27] = 0;
   out_6779429658567709733[28] = 0;
   out_6779429658567709733[29] = 0;
   out_6779429658567709733[30] = 0;
   out_6779429658567709733[31] = 0;
   out_6779429658567709733[32] = 0;
   out_6779429658567709733[33] = 0;
   out_6779429658567709733[34] = 0;
   out_6779429658567709733[35] = 0;
   out_6779429658567709733[36] = 0;
   out_6779429658567709733[37] = 0;
   out_6779429658567709733[38] = 0;
   out_6779429658567709733[39] = 0;
   out_6779429658567709733[40] = 0;
   out_6779429658567709733[41] = 0;
   out_6779429658567709733[42] = 0;
   out_6779429658567709733[43] = 0;
   out_6779429658567709733[44] = 0;
   out_6779429658567709733[45] = 0;
   out_6779429658567709733[46] = 0;
   out_6779429658567709733[47] = 0;
   out_6779429658567709733[48] = 0;
   out_6779429658567709733[49] = 1;
   out_6779429658567709733[50] = 0;
   out_6779429658567709733[51] = 0;
   out_6779429658567709733[52] = 0;
   out_6779429658567709733[53] = 0;
   out_6779429658567709733[54] = 0;
   out_6779429658567709733[55] = 0;
   out_6779429658567709733[56] = 0;
   out_6779429658567709733[57] = 0;
   out_6779429658567709733[58] = 0;
   out_6779429658567709733[59] = 0;
   out_6779429658567709733[60] = 0;
   out_6779429658567709733[61] = 0;
   out_6779429658567709733[62] = 0;
   out_6779429658567709733[63] = 0;
   out_6779429658567709733[64] = 0;
   out_6779429658567709733[65] = 0;
   out_6779429658567709733[66] = 0;
   out_6779429658567709733[67] = 0;
   out_6779429658567709733[68] = 0;
   out_6779429658567709733[69] = 0;
   out_6779429658567709733[70] = 0;
   out_6779429658567709733[71] = 0;
   out_6779429658567709733[72] = 1;
   out_6779429658567709733[73] = 0;
   out_6779429658567709733[74] = 0;
   out_6779429658567709733[75] = 0;
   out_6779429658567709733[76] = 0;
   out_6779429658567709733[77] = 0;
   out_6779429658567709733[78] = 0;
   out_6779429658567709733[79] = 0;
   out_6779429658567709733[80] = 0;
   out_6779429658567709733[81] = 0;
   out_6779429658567709733[82] = 0;
   out_6779429658567709733[83] = 0;
   out_6779429658567709733[84] = 0;
   out_6779429658567709733[85] = 0;
   out_6779429658567709733[86] = 0;
   out_6779429658567709733[87] = 0;
}
void h_13(double *state, double *unused, double *out_2360763578780184583) {
   out_2360763578780184583[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2360763578780184583[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2360763578780184583[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4053935256495661757) {
   out_4053935256495661757[0] = 0;
   out_4053935256495661757[1] = 0;
   out_4053935256495661757[2] = 0;
   out_4053935256495661757[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4053935256495661757[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4053935256495661757[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4053935256495661757[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4053935256495661757[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4053935256495661757[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4053935256495661757[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4053935256495661757[10] = 0;
   out_4053935256495661757[11] = 0;
   out_4053935256495661757[12] = 0;
   out_4053935256495661757[13] = 0;
   out_4053935256495661757[14] = 0;
   out_4053935256495661757[15] = 0;
   out_4053935256495661757[16] = 0;
   out_4053935256495661757[17] = 0;
   out_4053935256495661757[18] = 0;
   out_4053935256495661757[19] = 0;
   out_4053935256495661757[20] = 0;
   out_4053935256495661757[21] = 0;
   out_4053935256495661757[22] = 0;
   out_4053935256495661757[23] = 0;
   out_4053935256495661757[24] = 0;
   out_4053935256495661757[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4053935256495661757[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4053935256495661757[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4053935256495661757[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4053935256495661757[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4053935256495661757[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4053935256495661757[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4053935256495661757[32] = 0;
   out_4053935256495661757[33] = 0;
   out_4053935256495661757[34] = 0;
   out_4053935256495661757[35] = 0;
   out_4053935256495661757[36] = 0;
   out_4053935256495661757[37] = 0;
   out_4053935256495661757[38] = 0;
   out_4053935256495661757[39] = 0;
   out_4053935256495661757[40] = 0;
   out_4053935256495661757[41] = 0;
   out_4053935256495661757[42] = 0;
   out_4053935256495661757[43] = 0;
   out_4053935256495661757[44] = 0;
   out_4053935256495661757[45] = 0;
   out_4053935256495661757[46] = 0;
   out_4053935256495661757[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4053935256495661757[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4053935256495661757[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4053935256495661757[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4053935256495661757[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4053935256495661757[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4053935256495661757[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4053935256495661757[54] = 0;
   out_4053935256495661757[55] = 0;
   out_4053935256495661757[56] = 0;
   out_4053935256495661757[57] = 0;
   out_4053935256495661757[58] = 0;
   out_4053935256495661757[59] = 0;
   out_4053935256495661757[60] = 0;
   out_4053935256495661757[61] = 0;
   out_4053935256495661757[62] = 0;
   out_4053935256495661757[63] = 0;
   out_4053935256495661757[64] = 0;
   out_4053935256495661757[65] = 0;
}
void h_14(double *state, double *unused, double *out_3347631837389681515) {
   out_3347631837389681515[0] = state[10];
   out_3347631837389681515[1] = state[11];
   out_3347631837389681515[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2990037565616610108) {
   out_2990037565616610108[0] = 0;
   out_2990037565616610108[1] = 0;
   out_2990037565616610108[2] = 0;
   out_2990037565616610108[3] = 0;
   out_2990037565616610108[4] = 0;
   out_2990037565616610108[5] = 0;
   out_2990037565616610108[6] = 0;
   out_2990037565616610108[7] = 0;
   out_2990037565616610108[8] = 0;
   out_2990037565616610108[9] = 0;
   out_2990037565616610108[10] = 1;
   out_2990037565616610108[11] = 0;
   out_2990037565616610108[12] = 0;
   out_2990037565616610108[13] = 0;
   out_2990037565616610108[14] = 0;
   out_2990037565616610108[15] = 0;
   out_2990037565616610108[16] = 0;
   out_2990037565616610108[17] = 0;
   out_2990037565616610108[18] = 0;
   out_2990037565616610108[19] = 0;
   out_2990037565616610108[20] = 0;
   out_2990037565616610108[21] = 0;
   out_2990037565616610108[22] = 0;
   out_2990037565616610108[23] = 0;
   out_2990037565616610108[24] = 0;
   out_2990037565616610108[25] = 0;
   out_2990037565616610108[26] = 0;
   out_2990037565616610108[27] = 0;
   out_2990037565616610108[28] = 0;
   out_2990037565616610108[29] = 0;
   out_2990037565616610108[30] = 0;
   out_2990037565616610108[31] = 0;
   out_2990037565616610108[32] = 0;
   out_2990037565616610108[33] = 1;
   out_2990037565616610108[34] = 0;
   out_2990037565616610108[35] = 0;
   out_2990037565616610108[36] = 0;
   out_2990037565616610108[37] = 0;
   out_2990037565616610108[38] = 0;
   out_2990037565616610108[39] = 0;
   out_2990037565616610108[40] = 0;
   out_2990037565616610108[41] = 0;
   out_2990037565616610108[42] = 0;
   out_2990037565616610108[43] = 0;
   out_2990037565616610108[44] = 0;
   out_2990037565616610108[45] = 0;
   out_2990037565616610108[46] = 0;
   out_2990037565616610108[47] = 0;
   out_2990037565616610108[48] = 0;
   out_2990037565616610108[49] = 0;
   out_2990037565616610108[50] = 0;
   out_2990037565616610108[51] = 0;
   out_2990037565616610108[52] = 0;
   out_2990037565616610108[53] = 0;
   out_2990037565616610108[54] = 0;
   out_2990037565616610108[55] = 0;
   out_2990037565616610108[56] = 1;
   out_2990037565616610108[57] = 0;
   out_2990037565616610108[58] = 0;
   out_2990037565616610108[59] = 0;
   out_2990037565616610108[60] = 0;
   out_2990037565616610108[61] = 0;
   out_2990037565616610108[62] = 0;
   out_2990037565616610108[63] = 0;
   out_2990037565616610108[64] = 0;
   out_2990037565616610108[65] = 0;
}
void h_33(double *state, double *unused, double *out_2351356237073976575) {
   out_2351356237073976575[0] = state[16];
   out_2351356237073976575[1] = state[17];
   out_2351356237073976575[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3285991849765264227) {
   out_3285991849765264227[0] = 0;
   out_3285991849765264227[1] = 0;
   out_3285991849765264227[2] = 0;
   out_3285991849765264227[3] = 0;
   out_3285991849765264227[4] = 0;
   out_3285991849765264227[5] = 0;
   out_3285991849765264227[6] = 0;
   out_3285991849765264227[7] = 0;
   out_3285991849765264227[8] = 0;
   out_3285991849765264227[9] = 0;
   out_3285991849765264227[10] = 0;
   out_3285991849765264227[11] = 0;
   out_3285991849765264227[12] = 0;
   out_3285991849765264227[13] = 0;
   out_3285991849765264227[14] = 0;
   out_3285991849765264227[15] = 0;
   out_3285991849765264227[16] = 1;
   out_3285991849765264227[17] = 0;
   out_3285991849765264227[18] = 0;
   out_3285991849765264227[19] = 0;
   out_3285991849765264227[20] = 0;
   out_3285991849765264227[21] = 0;
   out_3285991849765264227[22] = 0;
   out_3285991849765264227[23] = 0;
   out_3285991849765264227[24] = 0;
   out_3285991849765264227[25] = 0;
   out_3285991849765264227[26] = 0;
   out_3285991849765264227[27] = 0;
   out_3285991849765264227[28] = 0;
   out_3285991849765264227[29] = 0;
   out_3285991849765264227[30] = 0;
   out_3285991849765264227[31] = 0;
   out_3285991849765264227[32] = 0;
   out_3285991849765264227[33] = 0;
   out_3285991849765264227[34] = 0;
   out_3285991849765264227[35] = 0;
   out_3285991849765264227[36] = 0;
   out_3285991849765264227[37] = 0;
   out_3285991849765264227[38] = 0;
   out_3285991849765264227[39] = 1;
   out_3285991849765264227[40] = 0;
   out_3285991849765264227[41] = 0;
   out_3285991849765264227[42] = 0;
   out_3285991849765264227[43] = 0;
   out_3285991849765264227[44] = 0;
   out_3285991849765264227[45] = 0;
   out_3285991849765264227[46] = 0;
   out_3285991849765264227[47] = 0;
   out_3285991849765264227[48] = 0;
   out_3285991849765264227[49] = 0;
   out_3285991849765264227[50] = 0;
   out_3285991849765264227[51] = 0;
   out_3285991849765264227[52] = 0;
   out_3285991849765264227[53] = 0;
   out_3285991849765264227[54] = 0;
   out_3285991849765264227[55] = 0;
   out_3285991849765264227[56] = 0;
   out_3285991849765264227[57] = 0;
   out_3285991849765264227[58] = 0;
   out_3285991849765264227[59] = 0;
   out_3285991849765264227[60] = 0;
   out_3285991849765264227[61] = 0;
   out_3285991849765264227[62] = 1;
   out_3285991849765264227[63] = 0;
   out_3285991849765264227[64] = 0;
   out_3285991849765264227[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3601087727253132969) {
  H(in_vec, out_3601087727253132969);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1153752211634308443) {
  err_fun(nom_x, delta_x, out_1153752211634308443);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6655342838562251109) {
  inv_err_fun(nom_x, true_x, out_6655342838562251109);
}
void live_H_mod_fun(double *state, double *out_6387601908760479860) {
  H_mod_fun(state, out_6387601908760479860);
}
void live_f_fun(double *state, double dt, double *out_2644681283468648566) {
  f_fun(state,  dt, out_2644681283468648566);
}
void live_F_fun(double *state, double dt, double *out_7072203675530199062) {
  F_fun(state,  dt, out_7072203675530199062);
}
void live_h_4(double *state, double *unused, double *out_563680518451919752) {
  h_4(state, unused, out_563680518451919752);
}
void live_H_4(double *state, double *unused, double *out_3231227212246200753) {
  H_4(state, unused, out_3231227212246200753);
}
void live_h_9(double *state, double *unused, double *out_3347631837389681515) {
  h_9(state, unused, out_3347631837389681515);
}
void live_H_9(double *state, double *unused, double *out_2990037565616610108) {
  H_9(state, unused, out_2990037565616610108);
}
void live_h_10(double *state, double *unused, double *out_4158589424796333618) {
  h_10(state, unused, out_4158589424796333618);
}
void live_H_10(double *state, double *unused, double *out_2024137388413149700) {
  H_10(state, unused, out_2024137388413149700);
}
void live_h_12(double *state, double *unused, double *out_3670144666999023199) {
  h_12(state, unused, out_3670144666999023199);
}
void live_H_12(double *state, double *unused, double *out_1788229195785761042) {
  H_12(state, unused, out_1788229195785761042);
}
void live_h_35(double *state, double *unused, double *out_2017282508012269633) {
  h_35(state, unused, out_2017282508012269633);
}
void live_H_35(double *state, double *unused, double *out_135434845126406623) {
  H_35(state, unused, out_135434845126406623);
}
void live_h_32(double *state, double *unused, double *out_6789382851101083323) {
  h_32(state, unused, out_6789382851101083323);
}
void live_H_32(double *state, double *unused, double *out_6779429658567709733) {
  H_32(state, unused, out_6779429658567709733);
}
void live_h_13(double *state, double *unused, double *out_2360763578780184583) {
  h_13(state, unused, out_2360763578780184583);
}
void live_H_13(double *state, double *unused, double *out_4053935256495661757) {
  H_13(state, unused, out_4053935256495661757);
}
void live_h_14(double *state, double *unused, double *out_3347631837389681515) {
  h_14(state, unused, out_3347631837389681515);
}
void live_H_14(double *state, double *unused, double *out_2990037565616610108) {
  H_14(state, unused, out_2990037565616610108);
}
void live_h_33(double *state, double *unused, double *out_2351356237073976575) {
  h_33(state, unused, out_2351356237073976575);
}
void live_H_33(double *state, double *unused, double *out_3285991849765264227) {
  H_33(state, unused, out_3285991849765264227);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
